'use strict';let abi=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{components:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"string",name:"uri",type:"string"},{internalType:"string",name:"sign_domain",type:"string"}],indexed:!1,internalType:"struct NFTTemplate.hackathon",name:"contractaddress",type:"tuple"},{indexed:!1,internalType:"address",name:"symbol",type:"address"}],name:"DeployContact",
type:"event"},{inputs:[{internalType:"string",name:"symbol",type:"string"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"uri",type:"string"},{internalType:"string",name:"sign_domain",type:"string"}],name:"deploychild",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"list",outputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",
name:"symbol",type:"string"},{internalType:"string",name:"uri",type:"string"},{internalType:"string",name:"sign_domain",type:"string"}],stateMutability:"view",type:"function"}];async function check_metamask(){try{return window.ethereum?(await window.ethereum.send("eth_requestAccounts"),window.web3=await new Web3(window.ethereum),!0):!1}catch(a){throw console.log(a),"";}}
async function inti_contract(a,c,d){try{let b=await new window.web3.eth.Contract(abi,"0xf2112074B3f7232F6140751d5e405e895cd4d9B4"),e=await window.web3.eth.getAccounts();return(await b.methods.deploychild(a,c,d,"LazyNFT-Voucher").send({from:e[0]})).events.DeployContact.returnValues[1]}catch(b){throw console.log(b),"";}}async function get_host_addr(){try{return(await window.web3.eth.getAccounts())[0]}catch(a){throw console.log(a),"";}};